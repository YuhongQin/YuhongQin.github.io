[{"content":"简单写一个博客 1.在posts文件夹中修改原有文件夹中的md文件或增添新的文件夹\n2.修改完成后在终端输入hugo server -D 在本地生成网页\n3.使用hugo -F \u0026ndash;cleanDestinationDir命令更新public文件夹中内容\n4.上传到github\n特殊功能 强调内容 效果：in this way you can make text marked\r1 {a{\u0026lt; mark text=\u0026#34;in this way you can make text marked\u0026#34; \u0026gt;}} 插入标签 效果：\rPaperMod 注意：在/themes/PaperMod/assets/css/extended/blank.css中编辑shortcodes的css\n字体还要在themes/PaperMod/layouts/partials/extend_head.html中改\n1 2 3 {a{\u0026lt; notice notice-tip \u0026gt;}} 使用时去掉a {a{\u0026lt; /notice \u0026gt;}} 更改网站图标 我的网站图标是： 1.首先进入https://favicon.io/\n2.将喜欢的图片或emoji转换成图标并解压\n3.将压缩包中内容全部放进static/image/\n4.根据favicon网站的提示在/themes/PaperMod/layouts/partials/head.html中添加以下内容：\n1 2 3 4 \u0026lt;link rel=\u0026#34;apple-touch-icon\u0026#34; sizes=\u0026#34;180x180\u0026#34; href=\u0026#34;/apple-touch-icon.png\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; sizes=\u0026#34;32x32\u0026#34; href=\u0026#34;/favicon-32x32.png\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; sizes=\u0026#34;16x16\u0026#34; href=\u0026#34;/favicon-16x16.png\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;/site.webmanifest\u0026#34;\u0026gt; 5.在config.yml中进行如下配置：\n1 2 3 4 5 6 7 8 params: assets: favicon: \u0026#34;/image/favicon.ico\u0026#34; favicon16x16: \u0026#34;/image/favicon-16x16.png\u0026#34; favicon32x32: \u0026#34;/image/favicon-32x32.png\u0026#34; apple_touch_icon: \u0026#34;/image/apple-touch-icon.png\u0026#34; safari_pinned_tab: \u0026#34;/image/android-chrome-192x192.png\u0026#34; disableFingerprinting: true ","permalink":"https://YuhongQin.github.io/posts/one/","summary":"粗略记录，有待完善。仅供本人记录使用，并非博客搭建教学，相关代码请参考其他PaperMod主题使用者的教学文章","title":"博客更新方法"},{"content":"游戏说明 播棋（Mancala），或译非洲棋，阿拉伯语是搬运的意思，是一种两人对弈的游戏，特色是如播种般过程不断搬移宝石一一放入进盘中，普遍流行于非洲国家。Mancala包括14个盘，其中两个是记分盘，另外12个则分配给两个玩家。开始游戏时，在12个非记分盘中分别放置了四个宝石。玩家通过选择六个含有宝石的非计分盘中的一个来进行移动。选中的盘子中的所有宝石都被捡起，然后将每块宝石一次性放置在下一个盘子中，以顺时针方向移动。可以在十二个非计分盘以及当前玩家的计分盘中放置一块宝石，对手的得分盘将被跳过。玩家之间交替比赛。当一个玩家得分达到25分或以上时，游戏结束。如果移动的宝石最后一个刚好落在该玩家的计分盘中，则该玩家获得再玩一次的机会。\n还有一个附加的规则。如果同时满足两个条件，就会发生捕获(capture)规则：玩家掉落的最后一块宝石落在当前玩家一侧的空盘中，并且在该空盘对面的对手盘子中至少存在一块宝石。在这种情况下，当前玩家会捕获放置的最后一块石头以及对手盘子中的所有石头。 tips🎁\r注意移动方向为顺时针\r代码import tkinter as tk from tkinter import * from tkinter import Tk, Label from PIL import ImageTk, Image class Mancala: def __init__(self): self.root = tk.Tk() self.root.title(\u0026#34;Mancala Game\u0026#34;) self.buttons = [] self.buttons0 = [] # self.frame = tk.Frame(self.root,width = 4000,height = 4000) self.player = 0 self.board = [4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0] self.continue_game = True self.label1 = tk.Label(self.root, text=\u0026#34;You Win!\u0026#34;) self.label2 = tk.Label(self.root, text=\u0026#34;You Lose!\u0026#34;) self.gamestate = 1 self.label3 = tk.Label(self.root, text=\u0026#34;MANCALA\u0026#34;,bg=\u0026#34;lightblue\u0026#34;) self.label3.grid(row=0,column=0,padx=20,pady=20) self.label4 = tk.Label(self.root, text=\u0026#34;\u0026#34;,bg=\u0026#34;lightblue\u0026#34;) self.label4.grid(row=5,column=0,padx=20,pady=20) self.labelfirst = Label(self.root, text=\u0026#34;Your turn\u0026#34;,bg=\u0026#34;pink\u0026#34;,fg=\u0026#39;white\u0026#39;) self.labelsecond = Label(self.root, text=\u0026#34;Computer\u0026#39;s turn\u0026#34;,bg=\u0026#34;pink\u0026#34;,fg=\u0026#39;white\u0026#39;) self.labelfirst.grid(row=0,column=8,padx=20,pady=20) self.root.after(1000,lambda:self.labelfirst.grid_forget()) for i in range(15): if i \u0026lt; 14: button = tk.Button(self.root, text=str(self.board[i]),relief=\u0026#34;ridge\u0026#34;) # button.bind(\u0026#34;\u0026lt;Enter\u0026gt;\u0026#34;, lambda event,index=i: self.left_click(event,index)) button.configure(command=lambda index=i: self.move(index)) if i \u0026lt;6: hex_color = f\u0026#34;#{213:02x}{228:02x}{233:02x}\u0026#34; button.grid(row=1, column=i+1,padx=20,pady=20,rowspan=2,ipadx=20) button.configure(bg=hex_color) elif i == 6: hex_color = f\u0026#34;#{209:02x}{231:02x}{255:02x}\u0026#34; button.grid(row=2,column=7,padx=20,pady=20,rowspan=3,ipady=40,ipadx=20) button.configure(bg=hex_color) elif i \u0026lt; 13: hex_color = f\u0026#34;#{255:02x}{240:02x}{232:02x}\u0026#34; button.grid(row=3,column=13 - i,padx=20,pady=20,rowspan=2,ipadx=20) button.configure(bg=hex_color) elif i == 13: hex_color = f\u0026#34;#{252:02x}{206:02x}{197:02x}\u0026#34; button.grid(row=2,column=0,padx=20,pady=20,rowspan=3,ipady=40,ipadx=20) button.configure(bg=hex_color) else: button = tk.Button(self.root,text=\u0026#34;restart game\u0026#34;,command=lambda:self.restart()) button.grid(row=7,column=8,padx=20,pady=20,ipadx=20,ipady=20,rowspan=3) self.buttons.append(button) def left_click(self,event,index): CreateToolTip(self.buttons[index],f\u0026#34;next is{(index + self.board[index])%14}\u0026#34;) def move(self, index): if self.continue_game == True: if self.player == 0: self.moveforOne(index) else: self.moveforTwo(index) else:return def moveforOne(self,index): if self.board[index] == 0 or index \u0026gt;=6: return else: chess = self.board[index] self.board[index] = 0 index += 1 while chess \u0026gt; 0 : index = index % 13 self.board[index] += 1 chess -= 1 index += 1 index -=1 if index != 6 and index != 13: self.gamestate = 1 self.eat(index) elif index == 6: self.gamestate = 2 self.once_again() self.update() else: self.gamestate = 1 self.player = (self.player + 1) % 2 self.update() if(self.gamestate == 1): self.labelsecond.grid(row=5,column=8,padx=20,pady=20) self.root.after(1000,lambda:self.labelsecond.grid_forget()) def moveforTwo(self,index): if self.board[index] == 0 or index \u0026lt;= 6 or index == 13: return else: chess = self.board[index] self.board[index] = 0 index += 1 while chess \u0026gt; 0 : index = index % 14 if index == 6: index = 7 self.board[index] += 1 else: self.board[index] += 1 chess -= 1 index += 1 index -=1 if index != 6 and index != 13: self.gamestate = 1 self.eat(index) elif index == 13: self.gamestate = 2 self.once_again() self.update() else: self.gamestate = 1 self.player = (self.player + 1) % 2 self.update() if(self.gamestate == 1): self.labelfirst.grid(row=0,column=8,padx=20,pady=20) self.root.after(1000,lambda:self.labelfirst.grid_forget()) def eat(self,index): if self.board[index] == 1: if self.player == 0: opposite = self.board[12 - index % 12] self.board[12 - index % 12] = 0 self.board[6] += opposite + 1 if self.player == 1: opposite = self.board[12 - index] self.board[12 - index] = 0 self.board[13] += opposite + 1 self.board[index] = 0 self.player = (self.player + 1) % 2 self.update() def check_win(self): if self.board[6] \u0026gt;= 25: return 0 elif self.board[13] \u0026gt;= 25: return 1 else: return 2 def update(self): for i in range(14): self.buttons[i].configure(text=str(self.board[i])) if(self.check_win() == 0): label = self.label1 label.grid(row = 7, column = 1) self.continue_game = False elif(self.check_win() == 1): label = self.label2 label.grid(row = 7, column = 1) self.continue_game = False def create_area(self): # canvas = tk.Canvas(self.root, width=40,height=40,bd=0, highlightthickness=0) # imgpath = \u0026#39;pictures\\\\1.gif\u0026#39; # img = Image.open(imgpath) # photo = ImageTk.PhotoImage(img) # canvas.create_image(40, 40, image=photo) # canvas.grid() self.root.configure(bg=\u0026#34;lightblue\u0026#34;) def once_again(self): label = Label(self.root,text=\u0026#34;once again!\u0026#34;,bg=\u0026#34;green\u0026#34;,fg=\u0026#39;white\u0026#39;) label.grid(row=2,column=8) self.root.after(1000,lambda:label.grid_forget()) def restart(self): self.board = [4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0] self.player = 0 self.update() self.continue_game = True self.label1.destroy() self.label2.destroy() def run(self): return def game(self): self.continue_game = True self.create_area() self.root.mainloop() class ToolTip(object): def __init__(self, widget): self.widget = widget self.tipwindow = None self.id = None self.x = self.y = 0 #当光标移动指定控件是显示消息 def showtip(self, text): \u0026#34;Display text in tooltip window\u0026#34; self.text = text if self.tipwindow or not self.text: return x, y, cx, cy = self.widget.bbox(\u0026#34;insert\u0026#34;) x = x + self.widget.winfo_rootx()+30 y = y + cy + self.widget.winfo_rooty()+30 self.tipwindow = tw = Toplevel(self.widget) tw.wm_overrideredirect(1) tw.wm_geometry(\u0026#34;+%d+%d\u0026#34; % (x, y)) label = Label(tw, text=self.text,justify=LEFT, background=\u0026#34;white\u0026#34;, relief=SOLID, borderwidth=1, font=(\u0026#34;仿宋\u0026#34;, \u0026#34;10\u0026#34;)) label.pack(side=BOTTOM) #当光标移开时提示消息隐藏 def hidetip(self): tw = self.tipwindow self.tipwindow = None if tw: tw.destroy() #创建该控件的函数 \u0026#34;\u0026#34;\u0026#34; 第一个参数：是定义的控件的名称 第二个参数，是要显示的文字信息 \u0026#34;\u0026#34;\u0026#34; def CreateToolTip(widget, text): toolTip = ToolTip(widget) def enter(event): toolTip.showtip(text) def leave(event): toolTip.hidetip() widget.bind(\u0026#39;\u0026lt;Enter\u0026gt;\u0026#39;, enter) widget.bind(\u0026#39;\u0026lt;Leave\u0026gt;\u0026#39;, leave) g = Mancala() g.game() 想说的话 初次使用tkinter库组件制作可在本地玩的简易小游戏,起因是受到steam上双人游戏\u0026lt;世界游戏大全\u0026gt;的启发,想做很多简单的小游戏整合成一个游戏合集.Mancala的代码设计与制作大约花费一上午,界面简易,规则也十分简单,如果不嫌弃的话可以试玩一下\n尚未添加人机对战等,游戏有待进一步完善\ntooltip控件的调用还是有些问题,修改中\n","permalink":"https://YuhongQin.github.io/posts/qwq/","summary":"Mancala","title":"Mancala"},{"content":"\r仁慈在于，\n只要你往前走，他总是给路。\n——史铁生\r\u0026lt;病隙碎笔\u0026gt; ","permalink":"https://YuhongQin.github.io/posts/quote/","summary":"quote","title":"quote"},{"content":"pictures 黑天鹅狙击手\ralbum \u003c!DOCTYPE html\u003e\r花\r露西亚\r","permalink":"https://YuhongQin.github.io/posts/233/","summary":"pictures","title":"相册"}]